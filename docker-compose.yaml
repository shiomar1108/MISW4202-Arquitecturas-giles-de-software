version: "3.2"
services:
  rabbitmq_broker:
    build: 
      context: .
      dockerfile: ./RabbitMQ/Dockerfile
    container_name: rabbitmq_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ccpnetwork

  mcs_ventas:
    image: mcs_ventas:latest
    volumes:
        - ./Ventas/security.key/:/backend/security.key
        - ./Ventas/white_list.json/:/backend/white_list.json
        - ./Ventas/app-config.properties/:/backend/app-config.properties
        - ./Ventas/log_transactions_put.txt/:/backend/log_transactions_put.txt
        - ./Ventas/log_transactions_post.txt/:/backend/log_transactions_post.txt
        
    build: ./Ventas
    working_dir: /backend/
    command: python app.py
    container_name: mcs_ventas
    networks:
      - ccpnetwork
    depends_on: 
      - rabbitmq_broker

  mcs_registro_ventas_post:
    image: mcs_registro_ventas_post:latest
    volumes:
        - ./RegistroVentasPost/security.key/:/backend/security.key
        - ./RegistroVentasPost/log_post_orders.txt/:/backend/log_post_orders.txt
        - ./RegistroVentasPost/app-config.properties/:/backend/app-config.properties
    build: ./RegistroVentasPost
    working_dir: /backend/
    command: python app.py
    container_name: mcs_registro_ventas_post
    networks:
      - ccpnetwork
    depends_on: 
      - rabbitmq_broker

  mcs_registro_ventas_put:
    image: mcs_registro_ventas_put:latest
    volumes:
        - ./RegistroVentasPut/security.key/:/backend/security.key
        - ./RegistroVentasPut/app-data.json/:/backend/app-data.json
        - ./RegistroVentasPut/log_put_orders.txt/:/backend/log_put_orders.txt
        - ./RegistroVentasPut/app-config.properties/:/backend/app-config.properties
    build: ./RegistroVentasPut
    working_dir: /backend/
    command: python app.py
    container_name: mcs_registro_ventas_put
    networks:
      - ccpnetwork
    depends_on: 
      - rabbitmq_broker

  mcs_usuario:
    image: mcs_usuario:latest
    volumes:
        - ./Usuarios/dbapp.sqlite/:/usuarios/instance/dbapp.sqlite    
    build: ./Usuarios
    working_dir: /usuarios
    command: python api.py
    container_name: mcs_usuario
    networks:
      - ccpnetwork
 
  mcs_rutas:
    image: mcs_rutas:latest  
    build: ./RutaClientes
    working_dir: /rutas
    command: python base.py
    container_name: mcs_rutas
    networks:
      - ccpnetwork
    depends_on:
      - mcs_usuario

  krakend_ce:
    image: devopsfaith/krakend:watch
    volumes:
      - ./config/krakend:/etc/krakend
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]
    networks:
      - ccpnetwork
  
networks: 
    ccpnetwork:
      driver: bridge